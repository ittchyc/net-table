{"remainingRequest":"/Users/hyc/ittchyc/net-value/node_modules/babel-loader/lib/index.js!/Users/hyc/ittchyc/net-value/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hyc/ittchyc/net-value/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hyc/ittchyc/net-value/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hyc/ittchyc/net-value/src/components/HelloWorld.vue","mtime":1599204507609},{"path":"/Users/hyc/ittchyc/net-value/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyc/ittchyc/net-value/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hyc/ittchyc/net-value/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyc/ittchyc/net-value/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEZpbGVTYXZlciBmcm9tICdmaWxlLXNhdmVyJzsKaW1wb3J0IFhMU1ggZnJvbSAneGxzeCc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiB7CiAgICBhcnJEYXRhOiBmdW5jdGlvbiBhcnJEYXRhKCkgewogICAgICB2YXIgYXJyID0gW3sKICAgICAgICBkYXRhOiAnMjAyMC85LzQnLAogICAgICAgIG5ldDogMAogICAgICB9XTsKICAgICAgdmFyIHRpbWUgPSAnMjAyMC85LzQnOwoKICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IDIwOyBpbmRleCsrKSB7CiAgICAgICAgdGltZSA9IG1vbWVudCh0aW1lKS5zdWJ0cmFjdCg3LCAnZGF5cycpOwogICAgICAgIGFyci5wdXNoKHsKICAgICAgICAgIGRhdGE6IG1vbWVudCh0aW1lKS5mb3JtYXQoJ1lZWVkvTU0vREQnKSwKICAgICAgICAgIG5ldDogTWF0aC5yZW0KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIGFycjsKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBtZXRob2RzOiB7CiAgICB0b0V4cG9ydDogZnVuY3Rpb24gdG9FeHBvcnQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmV4cG9ydEJ0bkxvYWRpbmcgPSB0cnVlOwogICAgICB2YXIgdGltZSA9IG1vbWVudCgpLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgICAvKiBnZW5lcmF0ZSB3b3JrYm9vayBvYmplY3QgZnJvbSB0YWJsZSAqLwoKICAgICAgdmFyIHhsc3hQYXJhbSA9IHsKICAgICAgICByYXc6IHRydWUKICAgICAgfTsgLy8g5a+85Ye655qE5YaF5a655Y+q5YGa6Kej5p6Q77yM5LiN6L+b6KGM5qC85byP6L2s5o2iCgogICAgICB2YXIgd2IgPSBYTFNYLnV0aWxzLnRhYmxlX3RvX2Jvb2soZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2V4cG9ydFRhYicpLCB4bHN4UGFyYW0pOwogICAgICAvKiBnZXQgYmluYXJ5IHN0cmluZyBhcyBvdXRwdXQgKi8KCiAgICAgIHZhciB3Ym91dCA9IFhMU1gud3JpdGUod2IsIHsKICAgICAgICBib29rVHlwZTogJ3hsc3gnLAogICAgICAgIGJvb2tTU1Q6IHRydWUsCiAgICAgICAgdHlwZTogJ2FycmF5JwogICAgICB9KTsKCiAgICAgIHRyeSB7CiAgICAgICAgRmlsZVNhdmVyLnNhdmVBcyhuZXcgQmxvYihbd2JvdXRdLCB7CiAgICAgICAgICB0eXBlOiAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJwogICAgICAgIH0pLCAiXHU1MTY4XHU4MEZEXHU1QjlEXHU1MTUxXHU2MzYyLSIuY29uY2F0KHRpbWUsICIueGxzeCIpKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGUsIHdib3V0KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmV4cG9ydEJ0bkxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSwgMTAwMCk7CiAgICAgIHJldHVybiB3Ym91dDsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLm9uU3VibWl0KCk7CiAgfQp9Ow=="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,IAAA,MAAA,MAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,GAAA,GAAA,CAAA;AAAA,QAAA,IAAA,EAAA,UAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAAA,CAAA;AACA,UAAA,IAAA,GAAA,UAAA;;AACA,WAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA;AACA,QAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,MAAA,CAAA;AACA,QAAA,GAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CADA;AAEA,UAAA,GAAA,EAAA,IAAA,CAAA;AAFA,SAAA;AAIA;;AACA,aAAA,GAAA;AACA;AAZA,GADA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA,EAAA;AAEA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,WAAA,gBAAA,GAAA,IAAA;AACA,UAAA,IAAA,GAAA,MAAA,GAAA,MAAA,CAAA,YAAA,CAAA;AACA;;AACA,UAAA,SAAA,GAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAAA,CAJA,CAIA;;AACA,UAAA,EAAA,GAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,aAAA,CAAA,YAAA,CAAA,EAAA,SAAA,CAAA;AACA;;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,EAAA,EAAA;AAAA,QAAA,QAAA,EAAA,MAAA;AAAA,QAAA,OAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,CAAA;;AACA,UAAA;AACA,QAAA,SAAA,CAAA,MAAA,CAAA,IAAA,IAAA,CAAA,CAAA,KAAA,CAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,CAAA,2CAAA,IAAA;AACA,OAFA,CAEA,OAAA,CAAA,EAAA;AACA,YAAA,OAAA,OAAA,KAAA,WAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA;AACA;AACA;;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,gBAAA,GAAA,KAAA;AACA,OAFA,EAEA,IAFA,CAAA;AAGA,aAAA,KAAA;AACA;AApBA,GAnBA;AAyCA,EAAA,OAzCA,qBAyCA;AACA,SAAA,QAAA;AACA;AA3CA,CAAA","sourcesContent":["<template>\n  <div class=\"balance-all-round-exchange\">{{arrData}}\n    <div class=\"table\" v-show=\"false\">\n      <el-table ref=\"multipleTable2\" id=\"exportTab\" :data=\"arrData\" tooltip-effect=\"light\" style=\"width: 100%\" stripe max-height=\"578\">\n        <el-table-column prop=\"mobile\" label=\"手机号/邮箱\" min-width=\"180\" show-overflow-tooltip>\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.mobile || '-' }} / {{ scope.row.email || '-' }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"mobile\" label=\"昵称/备注\" min-width=\"180\" show-overflow-tooltip>\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.nickname || '-' }} / {{ scope.row.note || '-' }}</span>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FileSaver from 'file-saver'\nimport XLSX from 'xlsx'\nimport moment from 'moment'\nexport default {\n  computed: {\n    arrData () {\n      let arr = [{ data: '2020/9/4', net: 0 }]\n      let time = '2020/9/4'\n      for (let index = 0; index < 20; index++) {\n        time = moment(time).subtract(7, 'days')\n        arr.push({\n          data: moment(time).format('YYYY/MM/DD'),\n          net: Math.rem\n        })\n      }\n      return arr\n    }\n  },\n  data () {\n    return {\n    }\n  },\n  methods: {\n    toExport () {\n      this.exportBtnLoading = true\n      let time = moment().format('YYYY-MM-DD')\n      /* generate workbook object from table */\n      var xlsxParam = { raw: true } // 导出的内容只做解析，不进行格式转换\n      var wb = XLSX.utils.table_to_book(document.querySelector('#exportTab'), xlsxParam)\n      /* get binary string as output */\n      var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'array' })\n      try {\n        FileSaver.saveAs(new Blob([wbout], { type: 'application/octet-stream' }), `全能宝兑换-${time}.xlsx`)\n      } catch (e) {\n        if (typeof console !== 'undefined') {\n          console.log(e, wbout)\n        }\n      }\n      setTimeout(() => {\n        this.exportBtnLoading = false\n      }, 1000)\n      return wbout\n    }\n  },\n  created () {\n    this.onSubmit()\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  .balance-all-round-exchange{\n    height: 100%;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}