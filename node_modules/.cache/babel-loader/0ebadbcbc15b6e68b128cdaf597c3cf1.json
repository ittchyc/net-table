{"remainingRequest":"/Users/hyc/ittchyc/net-value/node_modules/thread-loader/dist/cjs.js!/Users/hyc/ittchyc/net-value/node_modules/babel-loader/lib/index.js!/Users/hyc/ittchyc/net-value/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hyc/ittchyc/net-value/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hyc/ittchyc/net-value/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hyc/ittchyc/net-value/src/components/HelloWorld.vue","mtime":1599207437890},{"path":"/Users/hyc/ittchyc/net-value/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyc/ittchyc/net-value/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyc/ittchyc/net-value/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hyc/ittchyc/net-value/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyc/ittchyc/net-value/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEZpbGVTYXZlciBmcm9tICdmaWxlLXNhdmVyJzsKaW1wb3J0IFhMU1ggZnJvbSAneGxzeCc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhcnJEYXRhOiBbXSwKICAgICAgYnRuTG9hZGluZzogZmFsc2UsCiAgICAgIGZvcm06IHsKICAgICAgICBzdGFydEF0OiAnJywKICAgICAgICBudW06ICcnCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB0b0V4cG9ydDogZnVuY3Rpb24gdG9FeHBvcnQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAodGhpcy5mb3JtLnN0YXJ0QXQgJiYgdGhpcy5mb3JtLm51bSkgewogICAgICAgIHRoaXMuYnRuTG9hZGluZyA9IHRydWU7CiAgICAgICAgdmFyIGFyciA9IFt7CiAgICAgICAgICBkYXRhOiB0aGlzLmZvcm0uc3RhcnRBdCwKICAgICAgICAgIG5ldDogMQogICAgICAgIH1dOwogICAgICAgIHZhciB0aW1lViA9IHRoaXMuZm9ybS5zdGFydEF0OwoKICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5mb3JtLm51bTsgaW5kZXgrKykgewogICAgICAgICAgdGltZVYgPSBtb21lbnQodGltZVYpLnN1YnRyYWN0KDcsICdkYXlzJyk7CiAgICAgICAgICB2YXIgbnVtTmV0ID0gTWF0aC5yYW5kb20oKSAqIDEwOwogICAgICAgICAgYXJyLnB1c2goewogICAgICAgICAgICBkYXRhOiBtb21lbnQodGltZVYpLmZvcm1hdCgnWVlZWS9NTS9ERCcpLAogICAgICAgICAgICBuZXQ6IG51bU5ldC50b0ZpeGVkKDgpCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIHRoaXMuYXJyRGF0YSA9IGFycjsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciB0aW1lID0gbW9tZW50KCkuZm9ybWF0KCdZWVlZLU1NLUREJyk7CiAgICAgICAgICAvKiBnZW5lcmF0ZSB3b3JrYm9vayBvYmplY3QgZnJvbSB0YWJsZSAqLwoKICAgICAgICAgIHZhciB4bHN4UGFyYW0gPSB7CiAgICAgICAgICAgIHJhdzogdHJ1ZQogICAgICAgICAgfTsgLy8g5a+85Ye655qE5YaF5a655Y+q5YGa6Kej5p6Q77yM5LiN6L+b6KGM5qC85byP6L2s5o2iCgogICAgICAgICAgdmFyIHdiID0gWExTWC51dGlscy50YWJsZV90b19ib29rKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNleHBvcnRUYWInKSwgeGxzeFBhcmFtKTsKICAgICAgICAgIC8qIGdldCBiaW5hcnkgc3RyaW5nIGFzIG91dHB1dCAqLwoKICAgICAgICAgIHZhciB3Ym91dCA9IFhMU1gud3JpdGUod2IsIHsKICAgICAgICAgICAgYm9va1R5cGU6ICd4bHN4JywKICAgICAgICAgICAgYm9va1NTVDogdHJ1ZSwKICAgICAgICAgICAgdHlwZTogJ2FycmF5JwogICAgICAgICAgfSk7CgogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgRmlsZVNhdmVyLnNhdmVBcyhuZXcgQmxvYihbd2JvdXRdLCB7CiAgICAgICAgICAgICAgdHlwZTogJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScKICAgICAgICAgICAgfSksICJcdTU3RkFcdTkxRDFcdTRFQTdcdTU0QzFcdTUxQzBcdTUwM0NcdTY1NzBcdTYzNkUtIi5jb25jYXQodGltZSwgIi54bHN4IikpOwogICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coZSwgd2JvdXQpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLmJ0bkxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIH0sIDEwMDApOwogICAgICAgICAgcmV0dXJuIHdib3V0OwogICAgICAgIH0sIDEwMDApOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+ivt+Whq+WGmeWPguaVsCcpOwogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30KfTs="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,IAAA,MAAA,MAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAGA,MAAA,IAAA,EAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,GAAA,EAAA;AAFA;AAHA,KAAA;AAQA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,UAAA,KAAA,IAAA,CAAA,OAAA,IAAA,KAAA,IAAA,CAAA,GAAA,EAAA;AACA,aAAA,UAAA,GAAA,IAAA;AACA,YAAA,GAAA,GAAA,CAAA;AAAA,UAAA,IAAA,EAAA,KAAA,IAAA,CAAA,OAAA;AAAA,UAAA,GAAA,EAAA;AAAA,SAAA,CAAA;AACA,YAAA,KAAA,GAAA,KAAA,IAAA,CAAA,OAAA;;AACA,aAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,IAAA,CAAA,GAAA,EAAA,KAAA,EAAA,EAAA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,MAAA,CAAA;AACA,cAAA,MAAA,GAAA,IAAA,CAAA,MAAA,KAAA,EAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA,MAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CADA;AAEA,YAAA,GAAA,EAAA,MAAA,CAAA,OAAA,CAAA,CAAA;AAFA,WAAA;AAIA;;AACA,aAAA,OAAA,GAAA,GAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,cAAA,IAAA,GAAA,MAAA,GAAA,MAAA,CAAA,YAAA,CAAA;AACA;;AACA,cAAA,SAAA,GAAA;AAAA,YAAA,GAAA,EAAA;AAAA,WAAA,CAHA,CAGA;;AACA,cAAA,EAAA,GAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,aAAA,CAAA,YAAA,CAAA,EAAA,SAAA,CAAA;AACA;;AACA,cAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,EAAA,EAAA;AAAA,YAAA,QAAA,EAAA,MAAA;AAAA,YAAA,OAAA,EAAA,IAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA,CAAA;;AACA,cAAA;AACA,YAAA,SAAA,CAAA,MAAA,CAAA,IAAA,IAAA,CAAA,CAAA,KAAA,CAAA,EAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aAAA,CAAA,6DAAA,IAAA;AACA,WAFA,CAEA,OAAA,CAAA,EAAA;AACA,gBAAA,OAAA,OAAA,KAAA,WAAA,EAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA;AACA;AACA;;AACA,UAAA,UAAA,CAAA,YAAA;AACA,YAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AACA,WAFA,EAEA,IAFA,CAAA;AAGA,iBAAA,KAAA;AACA,SAlBA,EAkBA,IAlBA,CAAA;AAmBA,OAhCA,MAgCA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,OAAA;AACA;AACA;AArCA,GAXA;AAkDA,EAAA,OAlDA,qBAkDA,CACA;AAnDA,CAAA","sourcesContent":["<template>\n  <div class=\"box\">\n    <h1>生成净值数据</h1>\n    <el-form inline class=\"demo-form-inline\">\n      <el-form-item label=\"时间\">\n        <el-date-picker\n          v-model=\"form.startAt\"\n          type=\"date\"\n          value-format=\"yyyy/MM/dd\"\n          placeholder=\"开始时间\"\n          default-time=\"00:00:00\">\n        </el-date-picker>\n      </el-form-item>\n      <el-form-item label=\"条数\">\n        <el-input v-model=\"form.num\" @keyup.enter.native=\"search\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"info\" plain :loading=\"btnLoading\" @click=\"toExport\">导出</el-button>\n      </el-form-item>\n    </el-form>\n    <div class=\"table\" v-show=\"false\">\n      <el-table ref=\"multipleTable2\" id=\"exportTab\" :data=\"arrData\" tooltip-effect=\"light\" style=\"width: 100%\" stripe max-height=\"578\">\n        <el-table-column prop=\"data\" label=\"日期:（yyyy/MM/dd)\" min-width=\"500\"></el-table-column>\n        <el-table-column prop=\"net\" label=\"单位净值:（最高精度8位)\" min-width=\"500\"></el-table-column>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FileSaver from 'file-saver'\nimport XLSX from 'xlsx'\nimport moment from 'moment'\nexport default {\n  data () {\n    return {\n      arrData: [],\n      btnLoading: false,\n      form: {\n        startAt: '',\n        num: ''\n      }\n    }\n  },\n  methods: {\n    toExport () {\n      if (this.form.startAt && this.form.num) {\n        this.btnLoading = true\n        let arr = [{ data: this.form.startAt, net: 1 }]\n        let timeV = this.form.startAt\n        for (let index = 0; index < this.form.num; index++) {\n          timeV = moment(timeV).subtract(7, 'days')\n          let numNet = Math.random() * 10\n          arr.push({\n            data: moment(timeV).format('YYYY/MM/DD'),\n            net: numNet.toFixed(8)\n          })\n        }\n        this.arrData = arr\n        setTimeout(() => {\n          let time = moment().format('YYYY-MM-DD')\n          /* generate workbook object from table */\n          var xlsxParam = { raw: true } // 导出的内容只做解析，不进行格式转换\n          var wb = XLSX.utils.table_to_book(document.querySelector('#exportTab'), xlsxParam)\n          /* get binary string as output */\n          var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'array' })\n          try {\n            FileSaver.saveAs(new Blob([wbout], { type: 'application/octet-stream' }), `基金产品净值数据-${time}.xlsx`)\n          } catch (e) {\n            if (typeof console !== 'undefined') {\n              console.log(e, wbout)\n            }\n          }\n          setTimeout(() => {\n            this.btnLoading = false\n          }, 1000)\n          return wbout\n        }, 1000)\n      } else {\n        this.$message.error('请填写参数')\n      }\n    }\n  },\n  created () {\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  .box{\n    height: 100%;\n    padding-top: 30px;\n    h1{\n      color: #DBB171;\n      font-size: 36px;\n      margin-bottom: 60px;\n      text-shadow: 6px 3px 5px #F5E7C9;\n    }\n  }\n</style>\n"],"sourceRoot":"src/components"}]}